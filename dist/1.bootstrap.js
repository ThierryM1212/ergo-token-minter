(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ergo-lib-wasm-browser */ \"./node_modules/ergo-lib-wasm-browser/ergo_lib_wasm.js\");\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! json-bigint */ \"./node_modules/json-bigint/index.js\");\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(json_bigint__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst NANOERG_TO_ERG = 1000000000;\n\nfunction parseJson(str) {\n    let json = json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.parse(str);\n    return {\n        id: json.id,\n        inputs: json.inputs,\n        dataInputs: json.dataInputs,\n        outputs: json.outputs.map(output => ({\n            boxId: output.boxId,\n            value: output.value.toString(),\n            ergoTree: output.ergoTree,\n            assets: output.assets.map(asset => ({\n                tokenId: asset.tokenId,\n                amount: asset.amount.toString(),\n            })),\n            additionalRegisters: output.additionalRegisters,\n            creationHeight: output.creationHeight,\n            transactionId: output.transactionId,\n            index: output.index\n        })),\n\n    };\n}\n\nasync function connectErgoWallet() {\n    ergo_request_read_access().then(function (access_granted) {\n        const connectWalletButton = document.getElementById(\"connect-wallet\");\n        if (!access_granted) {\n            const status = document.getElementById(\"status\");\n            status.innerText = \"Wallet access denied\";\n            connectWalletButton.onclick = connectErgoWallet;\n        } else {\n            console.log(\"ergo access given\");\n            const status = document.getElementById(\"status\");\n            status.innerText = \"Wallet connected\";\n\n            ergo.get_balance().then(async function (result) {\n                let tx = {};\n\n                const walletAmount = parseFloat(parseFloat(result) / parseFloat(NANOERG_TO_ERG)).toFixed(3);\n                connectWalletButton.innerText = \"Balance: \" + walletAmount + \" ERG\";\n            });\n            const mintButton = document.getElementById(\"mint-token\");\n            mintButton.onclick = mintTokens;\n        }\n    });\n}\n\nasync function mintTokens(event) {\n    // prevent submit\n    event.preventDefault(event);\n    const tokenForm = document.getElementById(\"token-form\");\n    // run the form validation\n    tokenForm.reportValidity();\n    if (!tokenForm.checkValidity()) {\n        console.log(\"validation error\");\n        return false;\n    }\n    // set constants\n    const creationHeight = 600000;\n    const feeAddress = \"9hDPCYffeTEAcShngRGNMJsWddCUQLpNzAqwM9hQyx2w6qubmab\";\n    const minterAddress = await ergo.get_change_address();\n\n    //get the inputs\n    const status = document.getElementById(\"status\");\n    const tokenAmount = document.getElementById(\"quantity\").value;\n    const decimals = document.getElementById(\"decimals\").value;\n    const name = document.getElementById(\"name\").value;\n    const description = document.getElementById(\"description\").value;\n    const ergs = parseFloat(document.getElementById(\"ergs\").value);\n    const fee = parseFloat(document.getElementById(\"fee\").value);\n    console.log(tokenAmount, decimals, name, description, ergs, fee);\n\n    // prepare the amounts to send\n    const amountToSend = BigInt((ergs + fee) * NANOERG_TO_ERG);\n    const amountToSendBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(amountToSend.toString()));\n    const ergsStr = (ergs * NANOERG_TO_ERG).toString();\n    const ergsAmountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(ergsStr.toString()));\n    \n    // Get the input boxes from the connected wallet\n    const utxos = await getUtxos(amountToSend);\n    let utxosValue = utxos.reduce((acc, utxo) => acc += BigInt(utxo.value), BigInt(0));\n    console.log('utxos', utxosValue, utxos);\n    const changeValue = utxosValue - amountToSend - BigInt(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].SUGGESTED_TX_FEE().as_i64().to_str());\n    console.log(`${changeValue} | cv.ts() = ${changeValue.toString()}`);\n    const selector = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"SimpleBoxSelector\"]();\n    const boxSelection = selector.select(\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxes\"].from_boxes_json(utxos),\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(amountToSendBoxValue.as_i64().checked_add(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].SUGGESTED_TX_FEE().as_i64())),\n        new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Tokens\"]());\n    console.log(`boxes selected: ${boxSelection.boxes().len()}`);\n\n    //build the output boxes\n    const outputCandidates = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidates\"].empty();\n\n    // Build the minter output box\n    const token = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Token\"](\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenId\"].from_box_id(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxId\"].from_str(utxos[utxos.length - 1].boxId)),\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenAmount\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(tokenAmount)));\n    const minterBoxBuilder = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidateBuilder\"](\n        ergsAmountBoxValue,\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Contract\"].pay_to_address(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(minterAddress)),\n        creationHeight);\n    minterBoxBuilder.mint_token(token, name, description, decimals);\n    try {\n        outputCandidates.add(minterBoxBuilder.build());\n    } catch (e) {\n        console.log(`building error: ${e}`);\n        throw e;\n    }\n\n    // Build the fee output box\n    const feeStr = (fee * NANOERG_TO_ERG).toString();\n    const feeAmountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(feeStr.toString()));\n    const feeBoxBuilder = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidateBuilder\"](\n        feeAmountBoxValue,\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Contract\"].pay_to_address(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(feeAddress)),\n        creationHeight);\n    try {\n        outputCandidates.add(feeBoxBuilder.build());\n    } catch (e) {\n        console.log(`building error: ${e}`);\n        throw e;\n    }\n    console.log(`utxosval: ${utxosValue.toString()}`);\n\n    // Create the transaction \n    const txBuilder = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].new(\n        boxSelection,\n        outputCandidates,\n        creationHeight,\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].SUGGESTED_TX_FEE(),\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(minterAddress),\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].SAFE_USER_MIN());\n    const dataInputs = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"DataInputs\"]();\n    txBuilder.set_data_inputs(dataInputs);\n    const tx = parseJson(txBuilder.build().to_json());\n    console.log(`tx: ${json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(tx)}`);\n    console.log(`original id: ${tx.id}`);\n    \n    const correctTx = parseJson(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"UnsignedTransaction\"].from_json(json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(tx)).to_json());\n    console.log(`correct tx: ${json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(correctTx)}`);\n    console.log(`new id: ${correctTx.id}`);\n    // we must use the exact order chosen as after 0.4.3 in sigma-rust\n    // this can change and might not use all the utxos as the coin selection\n    // might choose a more optimal amount\n    correctTx.inputs = correctTx.inputs.map(box => {\n        console.log(`box: ${json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(box)}`);\n        const fullBoxInfo = utxos.find(utxo => utxo.boxId === box.boxId);\n        return {\n            ...fullBoxInfo,\n            extension: {}\n        };\n    });\n\n    // Send transaction for signing\n    status.innerText = \"Awaiting transaction signing\";\n    console.log(`${json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(correctTx)}`);\n    processTx(correctTx).then(txId => {\n        console.log('[txId]', txId);\n        if (txId) {\n            displayTxId(txId);\n        }\n    });\n    return false;\n}\n\nasync function getUtxos(amountToSend) {\n    const fee = BigInt(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].SUGGESTED_TX_FEE().as_i64().to_str());\n    console.log(amountToSend);\n    const fullAmountToSend = amountToSend + fee;\n    const utxos = await ergo.get_utxos(fullAmountToSend.toString());\n    const filteredUtxos = [];\n    for (const utxo of utxos) {\n        try {\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBox\"].from_json(json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(utxo));\n            filteredUtxos.push(utxo);\n        } catch (e) {\n            console.error('[getUtxos] UTxO failed parsing:', utxo, e);\n        }\n    }\n    return filteredUtxos;\n}\n\nasync function signTx(txToBeSigned) {\n    console.log(\"signTx\");\n    const status = document.getElementById(\"status\");\n    try {\n        return await ergo.sign_tx(txToBeSigned);\n    } catch (err) {\n        const msg = `[signTx] Error: ${JSON.stringify(err)}`;\n        console.error(msg, err);\n        status.innerText = msg\n        return null;\n    }\n}\n\nasync function submitTx(txToBeSubmitted) {\n    const status = document.getElementById(\"status\");\n    try {\n        return await ergo.submit_tx(txToBeSubmitted);\n    } catch (err) {\n        const msg = `[submitTx] Error: ${JSON.stringify(err)}`;\n        console.error(msg, err);\n        status.innerText = msg\n        return null;\n    }\n}\n\nasync function processTx(txToBeProcessed) {\n    const status = document.getElementById(\"status\");\n    const msg = s => {\n        console.log('[processTx]', s);\n        status.innerText = s;\n    };\n    const signedTx = await signTx(txToBeProcessed);\n    if (!signedTx) {\n        console.log(`No signed tx`);\n        return null;\n    }\n    msg(\"Transaction signed - awaiting submission\");\n    const txId = await submitTx(signedTx);\n    if (!txId) {\n        console.log(`No submitted tx ID`);\n        return null;\n    }\n    msg(\"Transaction submitted \");\n    return txId;\n}\n\nfunction displayTxId(txId) {\n    const status = document.getElementById(\"status\");\n    const cr = document.createElement(\"br\");\n    const txTracker = document.createElement(\"a\");\n    txTracker.appendChild(document.createTextNode(`View transaction in explorer: ${txId}`));\n    txTracker.href = `https://explorer.ergoplatform.com/en/transactions/${txId}`;\n    txTracker.target = \"_blank\"\n    status.appendChild(cr);\n    status.appendChild(txTracker);\n}\n\n// INIT page\nconst status = document.getElementById(\"status\");\nif (typeof ergo_request_read_access === \"undefined\") {\n    status.innerText = \"Yorio ergo dApp not found, install the extension\";\n} else {\n    console.log(\"Yorio ergo dApp found\");\n    window.addEventListener(\"ergo_wallet_disconnected\", function (event) {\n        const connectWalletButton = document.getElementById(\"connect-wallet\");\n        connectWalletButton.value = \"Connect wallet\";\n        connectWalletButton.onclick = connectErgoWallet;\n        \n        status.innerText = \"\";\n    });\n    connectErgoWallet();\n}\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/ergo-lib-wasm-browser sync recursive":
/*!*************************************************!*\
  !*** ./node_modules/ergo-lib-wasm-browser sync ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/ergo-lib-wasm-browser sync recursive\";\n\n//# sourceURL=webpack:///./node_modules/ergo-lib-wasm-browser_sync?");

/***/ })

}]);